{"version":3,"sources":["data/index.js","components/Group.js","components/Tag.js","App.js","index.js"],"names":["tags","id","name","color","groups","tagIds","groupOrder","Container","styled","div","Content","TagList","isDraggingOver","Handle","Group","group","children","index","draggableId","provided","snapshot","ref","innerRef","draggableProps","droppableId","direction","type","droppableProps","placeholder","dragHandleProps","Tag","tag","Chip","key","label","style","backgroundColor","isDragging","cursor","App","useState","data","setGroups","setGroupOrder","renderGroups","map","groupsId","onDragEnd","source","destination","newGroupOrder","Array","from","splice","startGroup","finishGroup","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d02d25e9.chunk.js","sourcesContent":["export default {\n  tags: {\n    'tag-1': { id: 'tag-1', name: 'Tag 1', color: '#2B4D7E' },\n    'tag-2': { id: 'tag-2', name: 'Tag 2', color: '#2B4D7E' },\n    'tag-3': { id: 'tag-3', name: 'Tag 3', color: '#2B4D7E' },\n    'tag-4': { id: 'tag-4', name: 'Tag 4', color: '#2B4D7E' },\n    'tag-5': { id: 'tag-5', name: 'Tag 5', color: '#2B4D7E' },\n    'tag-6': { id: 'tag-6', name: 'Tag 6', color: '#2B4D7E' }\n  },\n  groups: {\n    'group-1': {\n      id: 'group-1',\n      tagIds: ['tag-1', 'tag-2', 'tag-3']\n    },\n    'group-2': {\n      id: 'group-2',\n      tagIds: ['tag-4']\n    },\n    'group-3': {\n      id: 'group-3',\n      tagIds: ['tag-5', 'tag-6']\n    }\n  },\n  groupOrder: ['group-1', 'group-2', 'group-3']\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\n\nconst Container = styled.div`\n  border: 1px solid lightgray;\n  border-radius: 2px;\n  width: 100%;\n  background-color: white;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n`;\n\nconst TagList = styled.div`\n  padding: 8px;\n  background-color: ${({ isDraggingOver }) => (isDraggingOver ? '#FCF7C1' : 'inherit')};\n  min-height: 64px;\n  display: flex;\n`;\n\nconst Handle = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Group = ({ group, children, index }) => (\n  <Draggable draggableId={group.id} index={index}>\n    {(provided, snapshot) => (\n      <Container ref={provided.innerRef} {...provided.draggableProps}>\n        <Content>\n          <Droppable droppableId={group.id} direction='horizontal' type='tag'>\n            {(provided, snapshot) => (\n              <TagList ref={provided.innerRef} {...provided.droppableProps} isDraggingOver={snapshot.isDraggingOver}>\n                {children}\n                {provided.placeholder}\n              </TagList>\n            )}\n          </Droppable>\n        </Content>\n        <Handle {...provided.dragHandleProps}>\n          <DragIndicatorIcon />\n        </Handle>\n      </Container>\n    )}\n  </Draggable>\n);\n\nexport default Group;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\nimport Chip from '@material-ui/core/Chip';\n\nconst Container = styled.div`\n  padding: 8px;\n`;\n\nconst Tag = ({ tag, index }) => {\n  return (\n    <Draggable draggableId={tag.id} index={index}>\n      {(provided, snapshot) => (\n        <Container ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n          <Chip\n            key={tag.name}\n            label={tag.name}\n            style={{\n              backgroundColor: snapshot.isDragging ? '#F3A308' : tag.color,\n              color: 'white',\n              cursor: 'grab'\n            }}\n          />\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Tag;\n","import React, { useState } from 'react';\nimport './App.css';\nimport data from './data';\nimport Group from './components/Group';\nimport Tag from './components/Tag';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nconst App = () => {\n  const [groups, setGroups] = useState(data.groups);\n  const [groupOrder, setGroupOrder] = useState(data.groupOrder);\n\n  const handleOnDragEnd = ({ draggableId, source, destination, type }) => {\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    if (type === 'group') {\n      const newGroupOrder = Array.from(groupOrder);\n      newGroupOrder.splice(source.index, 1);\n      newGroupOrder.splice(destination.index, 0, draggableId);\n\n      setGroupOrder(newGroupOrder);\n    }\n\n    if (type === 'tag') {\n      const startGroup = groups[source.droppableId];\n      const finishGroup = groups[destination.droppableId];\n\n      startGroup.tagIds.splice(source.index, 1);\n      finishGroup.tagIds.splice(destination.index, 0, draggableId);\n\n      setGroups(prevState => ({ ...prevState, [startGroup.id]: startGroup, [finishGroup.id]: finishGroup }));\n    }\n  };\n\n  const renderGroups = groupOrder.map((groupsId, index) => {\n    const group = groups[groupsId];\n    const tags = group.tagIds.map(tagIds => data.tags[tagIds]);\n\n    return (\n      <Group key={group.id} group={group} index={index}>\n        {tags.map((tag, index) => (\n          <Tag key={tag.id} tag={tag} index={index} />\n        ))}\n      </Group>\n    );\n  });\n\n  return (\n    <DragDropContext onDragEnd={handleOnDragEnd}>\n      <Droppable droppableId='all-groups' type='group'>\n        {provided => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            {renderGroups}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}